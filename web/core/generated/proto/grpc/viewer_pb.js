// source: proto/grpc/viewer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_audio_analysis_analysis_pb = require('../../proto/audio/analysis/analysis_pb.js');
goog.object.extend(proto, proto_audio_analysis_analysis_pb);
var proto_grpc_connection_pb = require('../../proto/grpc/connection_pb.js');
goog.object.extend(proto, proto_grpc_connection_pb);
var proto_grpc_session_pb = require('../../proto/grpc/session_pb.js');
goog.object.extend(proto, proto_grpc_session_pb);
var proto_grpc_remote_pb = require('../../proto/grpc/remote_pb.js');
goog.object.extend(proto, proto_grpc_remote_pb);
goog.exportSymbol('proto.proto.grpc.UpdateSubscriptionRequest', null, global);
goog.exportSymbol('proto.proto.grpc.ViewerConnectRequest', null, global);
goog.exportSymbol('proto.proto.grpc.ViewerDisconnectRequest', null, global);
goog.exportSymbol('proto.proto.grpc.ViewerUpdate', null, global);
goog.exportSymbol('proto.proto.grpc.ViewerUpdate.UpdateCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.grpc.ViewerUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.grpc.ViewerUpdate.oneofGroups_);
};
goog.inherits(proto.proto.grpc.ViewerUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.grpc.ViewerUpdate.displayName = 'proto.proto.grpc.ViewerUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.grpc.UpdateSubscriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.grpc.UpdateSubscriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.grpc.UpdateSubscriptionRequest.displayName = 'proto.proto.grpc.UpdateSubscriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.grpc.ViewerConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.grpc.ViewerConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.grpc.ViewerConnectRequest.displayName = 'proto.proto.grpc.ViewerConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.grpc.ViewerDisconnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.grpc.ViewerDisconnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.grpc.ViewerDisconnectRequest.displayName = 'proto.proto.grpc.ViewerDisconnectRequest';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.grpc.ViewerUpdate.oneofGroups_ = [[1,2,100]];

/**
 * @enum {number}
 */
proto.proto.grpc.ViewerUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  HEARTBEAT: 1,
  ASSIGNMENT: 2,
  AUDIO_ANALYSIS_RESULT: 100
};

/**
 * @return {proto.proto.grpc.ViewerUpdate.UpdateCase}
 */
proto.proto.grpc.ViewerUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.proto.grpc.ViewerUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.proto.grpc.ViewerUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.grpc.ViewerUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.grpc.ViewerUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.grpc.ViewerUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    heartbeat: (f = msg.getHeartbeat()) && proto_grpc_connection_pb.Heartbeat.toObject(includeInstance, f),
    assignment: (f = msg.getAssignment()) && proto_grpc_session_pb.Assignment.toObject(includeInstance, f),
    audioAnalysisResult: (f = msg.getAudioAnalysisResult()) && proto_audio_analysis_analysis_pb.AudioAnalysisResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.grpc.ViewerUpdate}
 */
proto.proto.grpc.ViewerUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.grpc.ViewerUpdate;
  return proto.proto.grpc.ViewerUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.grpc.ViewerUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.grpc.ViewerUpdate}
 */
proto.proto.grpc.ViewerUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_grpc_connection_pb.Heartbeat;
      reader.readMessage(value,proto_grpc_connection_pb.Heartbeat.deserializeBinaryFromReader);
      msg.setHeartbeat(value);
      break;
    case 2:
      var value = new proto_grpc_session_pb.Assignment;
      reader.readMessage(value,proto_grpc_session_pb.Assignment.deserializeBinaryFromReader);
      msg.setAssignment(value);
      break;
    case 100:
      var value = new proto_audio_analysis_analysis_pb.AudioAnalysisResult;
      reader.readMessage(value,proto_audio_analysis_analysis_pb.AudioAnalysisResult.deserializeBinaryFromReader);
      msg.setAudioAnalysisResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.grpc.ViewerUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.grpc.ViewerUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.grpc.ViewerUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeartbeat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_grpc_connection_pb.Heartbeat.serializeBinaryToWriter
    );
  }
  f = message.getAssignment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_grpc_session_pb.Assignment.serializeBinaryToWriter
    );
  }
  f = message.getAudioAnalysisResult();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto_audio_analysis_analysis_pb.AudioAnalysisResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional Heartbeat heartbeat = 1;
 * @return {?proto.proto.grpc.Heartbeat}
 */
proto.proto.grpc.ViewerUpdate.prototype.getHeartbeat = function() {
  return /** @type{?proto.proto.grpc.Heartbeat} */ (
    jspb.Message.getWrapperField(this, proto_grpc_connection_pb.Heartbeat, 1));
};


/**
 * @param {?proto.proto.grpc.Heartbeat|undefined} value
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
*/
proto.proto.grpc.ViewerUpdate.prototype.setHeartbeat = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.proto.grpc.ViewerUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
 */
proto.proto.grpc.ViewerUpdate.prototype.clearHeartbeat = function() {
  return this.setHeartbeat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.grpc.ViewerUpdate.prototype.hasHeartbeat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Assignment assignment = 2;
 * @return {?proto.proto.grpc.Assignment}
 */
proto.proto.grpc.ViewerUpdate.prototype.getAssignment = function() {
  return /** @type{?proto.proto.grpc.Assignment} */ (
    jspb.Message.getWrapperField(this, proto_grpc_session_pb.Assignment, 2));
};


/**
 * @param {?proto.proto.grpc.Assignment|undefined} value
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
*/
proto.proto.grpc.ViewerUpdate.prototype.setAssignment = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.proto.grpc.ViewerUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
 */
proto.proto.grpc.ViewerUpdate.prototype.clearAssignment = function() {
  return this.setAssignment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.grpc.ViewerUpdate.prototype.hasAssignment = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional proto.audio.analysis.AudioAnalysisResult audio_analysis_result = 100;
 * @return {?proto.proto.audio.analysis.AudioAnalysisResult}
 */
proto.proto.grpc.ViewerUpdate.prototype.getAudioAnalysisResult = function() {
  return /** @type{?proto.proto.audio.analysis.AudioAnalysisResult} */ (
    jspb.Message.getWrapperField(this, proto_audio_analysis_analysis_pb.AudioAnalysisResult, 100));
};


/**
 * @param {?proto.proto.audio.analysis.AudioAnalysisResult|undefined} value
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
*/
proto.proto.grpc.ViewerUpdate.prototype.setAudioAnalysisResult = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.proto.grpc.ViewerUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.grpc.ViewerUpdate} returns this
 */
proto.proto.grpc.ViewerUpdate.prototype.clearAudioAnalysisResult = function() {
  return this.setAudioAnalysisResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.grpc.ViewerUpdate.prototype.hasAudioAnalysisResult = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.grpc.UpdateSubscriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.grpc.UpdateSubscriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.grpc.UpdateSubscriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.UpdateSubscriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.grpc.UpdateSubscriptionRequest}
 */
proto.proto.grpc.UpdateSubscriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.grpc.UpdateSubscriptionRequest;
  return proto.proto.grpc.UpdateSubscriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.grpc.UpdateSubscriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.grpc.UpdateSubscriptionRequest}
 */
proto.proto.grpc.UpdateSubscriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.grpc.UpdateSubscriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.grpc.UpdateSubscriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.grpc.UpdateSubscriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.UpdateSubscriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.grpc.ViewerConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.grpc.ViewerConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.grpc.ViewerConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && proto_grpc_session_pb.InstanceId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.grpc.ViewerConnectRequest}
 */
proto.proto.grpc.ViewerConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.grpc.ViewerConnectRequest;
  return proto.proto.grpc.ViewerConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.grpc.ViewerConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.grpc.ViewerConnectRequest}
 */
proto.proto.grpc.ViewerConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_grpc_session_pb.InstanceId;
      reader.readMessage(value,proto_grpc_session_pb.InstanceId.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.grpc.ViewerConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.grpc.ViewerConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.grpc.ViewerConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_grpc_session_pb.InstanceId.serializeBinaryToWriter
    );
  }
};


/**
 * optional InstanceId instance = 1;
 * @return {?proto.proto.grpc.InstanceId}
 */
proto.proto.grpc.ViewerConnectRequest.prototype.getInstance = function() {
  return /** @type{?proto.proto.grpc.InstanceId} */ (
    jspb.Message.getWrapperField(this, proto_grpc_session_pb.InstanceId, 1));
};


/**
 * @param {?proto.proto.grpc.InstanceId|undefined} value
 * @return {!proto.proto.grpc.ViewerConnectRequest} returns this
*/
proto.proto.grpc.ViewerConnectRequest.prototype.setInstance = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.grpc.ViewerConnectRequest} returns this
 */
proto.proto.grpc.ViewerConnectRequest.prototype.clearInstance = function() {
  return this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.grpc.ViewerConnectRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.grpc.ViewerDisconnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.grpc.ViewerDisconnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.grpc.ViewerDisconnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerDisconnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.grpc.ViewerDisconnectRequest}
 */
proto.proto.grpc.ViewerDisconnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.grpc.ViewerDisconnectRequest;
  return proto.proto.grpc.ViewerDisconnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.grpc.ViewerDisconnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.grpc.ViewerDisconnectRequest}
 */
proto.proto.grpc.ViewerDisconnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.grpc.ViewerDisconnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.grpc.ViewerDisconnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.grpc.ViewerDisconnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.grpc.ViewerDisconnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.proto.grpc);
